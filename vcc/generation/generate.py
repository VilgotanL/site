import os
import json

mediator_file = open("mediator.js")
mediator_src = mediator_file.read()
mediator_file.close()

os.chdir("../esolangs/")
for lang in os.listdir():
    if not os.path.isdir(lang):
        continue
    if os.path.isfile(os.path.join(lang, "impl-gen.js")):
        impl_file = open(os.path.join(lang, "impl-gen.js"), "r")
        impl_src = impl_file.read()
        impl_file.close()

        impl_src_lines = impl_src.split("\n")
        assert impl_src_lines[0] == "let lang = {", Exception("Unknown lang format: impl-gen.js invalid start line")
        impl_src_lines[0] = "{"
        lang_json = ""
        while impl_src_lines[0] != "};":
            lang_json += impl_src_lines.pop(0)
            if len(impl_src_lines) == 0:
                raise Exception("Unknown lang format: missing exact json ending line in impl-gen.js")
        lang_json = json.loads(lang_json+"}")

        assert lang_json["format_version"] == "vcc-v1"
        assert lang_json["lang"]["type"] == "esolang"
        assert lang_json["lang"]["name"]
        assert lang_json["impl"]["type"] == "standard_interplib"


        html_file = open(os.path.join(lang, "index.html"), "w", encoding="utf_8")


        lang_title = lang_json["lang"]["name"][0].upper() + lang_json["lang"]["name"][1:]

        js = mediator_src.replace("// IMPL_JS\n// END", f"// IMPL_JS\n{impl_src}\n// END")
        js = "{\n" + "\n".join(map(lambda line: "    " + line, js.split("\n"))) + "\n}"

        html_file.write(f'<!DOCTYPE html> <!-- by VilgotanL --> <!-- THIS HTML FILE IS GENERATED BY A PYTHON SCRIPT -->\n')
        html_file.write(f'<html lang="en">\n')
        html_file.write(f'    <head>\n')
        html_file.write(f'        <meta charset="utf-8">\n')
        html_file.write(f'        <meta name="viewport" content="width=device-width, initial-scale=1">\n')
        html_file.write(f'        <title>{lang_title} Interpreter</title>\n')
        html_file.write(f'        <script src="../../../libs/interplib23/interplib23.js"></script>\n')
        html_file.write(f'    </head>\n')
        html_file.write(f'    <body>\n')
        html_file.write(f'        <header>\n')
        html_file.write(f'            <h1>Waiting for JS. <noscript>Please enable JavaScript.</noscript></h1>\n')
        #html_file.write(f'            LANG_TITLEBAR_PLACEHOLDER\n')
        html_file.write(f'            <button id="theme">Toggle Theme</button>\n')
        html_file.write(f'        </header>\n')
        #html_file.write(f'        LANG_DOCS_PLACEHOLDER\n')
        html_file.write(f'        <console-area id="main-console-area"></console-area>\n')
        html_file.write(f'        <section class="buttons">\n')
        html_file.write(f'        </section>\n')
        html_file.write(f'        <code-area localstorage-name="main" id="main-code-area"></code-area>\n')
        html_file.write(f'\n')
        html_file.write(f'        <script>\n')
        html_file.write("\n".join(map(lambda line: "            " + line, js.split("\n"))) + "\n")
        html_file.write(f'        </script>\n')
        html_file.write(f'    </body>\n')
        html_file.write(f'</html>\n')

        print("did:", lang)
    else:
        print("no generate:", lang)